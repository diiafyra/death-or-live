/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.sql.Date;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.TransferHandler;

/**
 *
 * @author DELL
 */
public class product extends javax.swing.JFrame {

    /**
     * Creates new form product
     */
    public product() {

        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        maspL = new javax.swing.JLabel();
        imageL = new javax.swing.JLabel();
        tenspL = new javax.swing.JLabel();
        motaL = new javax.swing.JLabel();
        tonkhoL = new javax.swing.JLabel();
        khonhapL = new javax.swing.JLabel();
        giaL = new javax.swing.JLabel();
        tenspF = new java.awt.TextField();
        maspF = new java.awt.TextField();
        brower = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        motaArea = new javax.swing.JTextArea();
        tonkhoF = new java.awt.TextField();
        giaF = new java.awt.TextField();
        khonhapF = new java.awt.TextField();
        ngaynhapL = new javax.swing.JLabel();
        ngaynhapF = new java.awt.TextField();
        imageLb = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        maspL.setText("Mã SP");
        jPanel4.add(maspL, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        imageL.setText("Hình ảnh SP");
        jPanel4.add(imageL, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        tenspL.setText("Tên SP");
        jPanel4.add(tenspL, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        motaL.setText("Mô tả SP");
        jPanel4.add(motaL, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, -1, -1));

        tonkhoL.setText("Tồn kho");
        jPanel4.add(tonkhoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 21));

        khonhapL.setText("Kho nhập");
        jPanel4.add(khonhapL, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, -1, -1));

        giaL.setText("Giá");
        jPanel4.add(giaL, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        tenspF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenspFActionPerformed(evt);
            }
        });
        jPanel4.add(tenspF, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 206, -1));

        maspF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maspFActionPerformed(evt);
            }
        });
        jPanel4.add(maspF, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 206, -1));

        brower.setText("Brower");
        brower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browerActionPerformed(evt);
            }
        });
        jPanel4.add(brower, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, -1, -1));

        motaArea.setColumns(20);
        motaArea.setRows(5);
        jScrollPane5.setViewportView(motaArea);

        jPanel4.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, 206, 230));

        tonkhoF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tonkhoFActionPerformed(evt);
            }
        });
        jPanel4.add(tonkhoF, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 206, -1));

        giaF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giaFActionPerformed(evt);
            }
        });
        jPanel4.add(giaF, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 206, -1));

        khonhapF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                khonhapFActionPerformed(evt);
            }
        });
        jPanel4.add(khonhapF, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, 206, -1));

        ngaynhapL.setText("Ngày nhập");
        jPanel4.add(ngaynhapL, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, -1));

        ngaynhapF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ngaynhapFActionPerformed(evt);
            }
        });
        jPanel4.add(ngaynhapF, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 206, -1));

        imageLb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imageLb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                imageLbKeyTyped(evt);
            }
        });
        jPanel4.add(imageLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 200, 200));

        add.setText("Thêm");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel4.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 490, 120, 40));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        jPanel4.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 90, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tenspFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenspFActionPerformed
        
    }//GEN-LAST:event_tenspFActionPerformed

    private void maspFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maspFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maspFActionPerformed

    private void browerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_browerActionPerformed

    private void tonkhoFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tonkhoFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tonkhoFActionPerformed

    private void giaFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giaFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_giaFActionPerformed

    private void khonhapFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_khonhapFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_khonhapFActionPerformed

    private void ngaynhapFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ngaynhapFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ngaynhapFActionPerformed
        
    ImageIcon currentImage;
        // Lớp xử lý sự kiện để paste hình ảnh từ Clipboard
    class ImageTransferHandler extends TransferHandler {
        @Override
        public boolean canImport(TransferHandler.TransferSupport support) {
            return support.isDataFlavorSupported(DataFlavor.imageFlavor);
        }

        @Override
        public boolean importData(TransferHandler.TransferSupport support) {
            if (!canImport(support)) {
                return false;
            }

            try {
                Transferable transferable = support.getTransferable();
                Image image = (Image) transferable.getTransferData(DataFlavor.imageFlavor);
                ImageIcon icon = new ImageIcon(image);
                imageLb.setIcon(icon);
                currentImage = icon; // Lưu ImageIcon hiện tại
                return true;
            } catch (UnsupportedFlavorException | IOException ex) {
                ex.printStackTrace();
                return false;
            }
        }
    }     
        // Lớp xử lý sự kiện để paste hình ảnh từ Clipboard
        private void pasteImageFromClipboard() {
        try {
            Transferable transferable = Toolkit.getDefaultToolkit().getSystemClipboard().getContents(null);
            if (transferable != null && transferable.isDataFlavorSupported(DataFlavor.imageFlavor)) {
                Image image = (Image) transferable.getTransferData(DataFlavor.imageFlavor);
                ImageIcon icon = new ImageIcon(image);
                imageLb.setIcon(icon);
                currentImage = icon; // Lưu ImageIcon hiện tại
            }
        } catch (UnsupportedFlavorException | IOException ex) {
            ex.printStackTrace();
        }
    }
       private byte[] getByteArray(Image image) throws IOException {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ImageIO.write((BufferedImage) image, "jpg", baos);
        return baos.toByteArray();
    }
        
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String id = maspF.getText();
        String name = tenspF.getText();
        int instock = Integer.parseInt(tonkhoF.getText());
        String desc = motaArea.getText();
        byte[] imageData = null;
        if (currentImage != null) {
            try {
                imageData = getByteArray(currentImage.getImage());
            } catch (IOException ex) {
                Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        int price = Integer.parseInt(giaF.getText());
        String depot = khonhapF.getText();
        
        String dateFormatString = "dd/MM/yyyy";

        SimpleDateFormat dateFormat = new SimpleDateFormat(dateFormatString);

        String dateString = ngaynhapF.getText();


        Date date = null;
        try {
            java.util.Date utilDate = dateFormat.parse(dateString);
            date = new Date(utilDate.getTime());
        } catch (ParseException ex) {
            Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
        }

        cndb db = cndb.getInstance();
        db.open();
        db.productInsert(id, name, instock, desc, imageData, price, depot, date);
        MainFr mfr = MainFr.getInstance();
        mfr.RefreshProList();
        db.close();
    }//GEN-LAST:event_addActionPerformed

    private void imageLbKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imageLbKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_imageLbKeyTyped

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V) {
            pasteImageFromClipboard();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton brower;
    private java.awt.TextField giaF;
    private javax.swing.JLabel giaL;
    private javax.swing.JLabel imageL;
    private javax.swing.JLabel imageLb;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField1;
    private java.awt.TextField khonhapF;
    private javax.swing.JLabel khonhapL;
    private java.awt.TextField maspF;
    private javax.swing.JLabel maspL;
    private javax.swing.JTextArea motaArea;
    private javax.swing.JLabel motaL;
    private java.awt.TextField ngaynhapF;
    private javax.swing.JLabel ngaynhapL;
    private java.awt.TextField tenspF;
    private javax.swing.JLabel tenspL;
    private java.awt.TextField tonkhoF;
    private javax.swing.JLabel tonkhoL;
    // End of variables declaration//GEN-END:variables
}
